# TODO have the ws and http server inherit from a common image
# to avoid duplicating so many dependencies
FROM nginx:latest AS base

# Install OS dependencies
# TODO double check that all of these are actually needed
# zip: used to zip some lua files as an example game to be uploaded
RUN apt-get update && apt-get install -y \
	cmake \
	git \
	python3 \
	python3-pip \
	pipx \
	ninja-build \
	wget \
	xz-utils \
	zlib1g-dev \
	zip

RUN which zip

# Create a python venv to suppress nginx complaining about
# installing packages to system python.
# (Not sure why this is needed inside a docker container)
RUN python3 -m venv /alexgames_python_venv
ENV PATH="/alexgames_python_venv/bin:$PATH"

# Install python dependencies
RUN pip3 install wordfreq # needed to generate dictionary file

# Install Emscripten
WORKDIR /
RUN if [ ! -f "emsdk" ]; then \
	echo "Cloning emsdk repo..."; \
	git clone https://github.com/emscripten-core/emsdk.git emsdk ; \
else \
	echo "emsdk repo already present"; \
fi
WORKDIR /emsdk
RUN ./emsdk install latest
RUN ./emsdk activate latest
RUN . ./emsdk_env.sh
ENV PATH="${PATH}:/emsdk"
RUN /bin/bash -c "source ./emsdk_env.sh"
ENV PATH="${PATH}:/emsdk/upstream/emscripten"
RUN emcc --version

# Install rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN rustup target add wasm32-unknown-emscripten

FROM base AS build_alexgames
WORKDIR /app

CMD ["bash", "build/wasm/build.sh" ]
